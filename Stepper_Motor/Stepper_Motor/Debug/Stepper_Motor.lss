
Stepper_Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000158  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000104  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000158  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000188  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007c2  00000000  00000000  000001e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000068d  00000000  00000000  000009aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000348  00000000  00000000  00001037  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001380  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000039d  00000000  00000000  000013a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000167  00000000  00000000  00001741  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000018a8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 80 00 	jmp	0x100	; 0x100 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:

int main(void) {
	
	int i, length = 500;
	
	DDRD |= (1 << PIND6) | (1 << PIND5) | (1 << PIND4) | (1 << PIND3);
  80:	8a b1       	in	r24, 0x0a	; 10
  82:	88 67       	ori	r24, 0x78	; 120
  84:	8a b9       	out	0x0a, r24	; 10

#define F_CPU 16000000
#include <avr/io.h>
#include <util/delay.h>

int main(void) {
  86:	84 ef       	ldi	r24, 0xF4	; 244
  88:	91 e0       	ldi	r25, 0x01	; 1
	
    while (1) {

		for(i = 0; i < length; i++) {
				
			PORTD |= (1 << PIND6);
  8a:	5e 9a       	sbi	0x0b, 6	; 11
			PORTD |= (1 << PIND5);
  8c:	5d 9a       	sbi	0x0b, 5	; 11
			PORTD &= ~(1 << PIND4);
  8e:	5c 98       	cbi	0x0b, 4	; 11
			PORTD &= ~(1 << PIND3);
  90:	5b 98       	cbi	0x0b, 3	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  92:	2f ef       	ldi	r18, 0xFF	; 255
  94:	31 ee       	ldi	r19, 0xE1	; 225
  96:	44 e0       	ldi	r20, 0x04	; 4
  98:	21 50       	subi	r18, 0x01	; 1
  9a:	30 40       	sbci	r19, 0x00	; 0
  9c:	40 40       	sbci	r20, 0x00	; 0
  9e:	e1 f7       	brne	.-8      	; 0x98 <main+0x18>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <main+0x22>
  a2:	00 00       	nop
			_delay_ms(100);
			PORTD &= ~(1 << PIND6);
  a4:	5e 98       	cbi	0x0b, 6	; 11
			PORTD |= (1 << PIND5);
  a6:	5d 9a       	sbi	0x0b, 5	; 11
			PORTD |= (1 << PIND4);
  a8:	5c 9a       	sbi	0x0b, 4	; 11
			PORTD &= ~(1 << PIND3);
  aa:	5b 98       	cbi	0x0b, 3	; 11
  ac:	2f ef       	ldi	r18, 0xFF	; 255
  ae:	31 ee       	ldi	r19, 0xE1	; 225
  b0:	44 e0       	ldi	r20, 0x04	; 4
  b2:	21 50       	subi	r18, 0x01	; 1
  b4:	30 40       	sbci	r19, 0x00	; 0
  b6:	40 40       	sbci	r20, 0x00	; 0
  b8:	e1 f7       	brne	.-8      	; 0xb2 <main+0x32>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <main+0x3c>
  bc:	00 00       	nop
			_delay_ms(100);
			PORTD &= ~(1 << PIND6);
  be:	5e 98       	cbi	0x0b, 6	; 11
			PORTD &= ~(1 << PIND5);
  c0:	5d 98       	cbi	0x0b, 5	; 11
			PORTD |= (1 << PIND4);
  c2:	5c 9a       	sbi	0x0b, 4	; 11
			PORTD |= (1 << PIND3);
  c4:	5b 9a       	sbi	0x0b, 3	; 11
  c6:	2f ef       	ldi	r18, 0xFF	; 255
  c8:	31 ee       	ldi	r19, 0xE1	; 225
  ca:	44 e0       	ldi	r20, 0x04	; 4
  cc:	21 50       	subi	r18, 0x01	; 1
  ce:	30 40       	sbci	r19, 0x00	; 0
  d0:	40 40       	sbci	r20, 0x00	; 0
  d2:	e1 f7       	brne	.-8      	; 0xcc <main+0x4c>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <main+0x56>
  d6:	00 00       	nop
			_delay_ms(100);
			PORTD |= (1 << PIND6);
  d8:	5e 9a       	sbi	0x0b, 6	; 11
			PORTD &= ~(1 << PIND5);
  da:	5d 98       	cbi	0x0b, 5	; 11
			PORTD &= ~(1 << PIND4);
  dc:	5c 98       	cbi	0x0b, 4	; 11
			PORTD |= (1 << PIND3);
  de:	5b 9a       	sbi	0x0b, 3	; 11
  e0:	2f ef       	ldi	r18, 0xFF	; 255
  e2:	31 ee       	ldi	r19, 0xE1	; 225
  e4:	44 e0       	ldi	r20, 0x04	; 4
  e6:	21 50       	subi	r18, 0x01	; 1
  e8:	30 40       	sbci	r19, 0x00	; 0
  ea:	40 40       	sbci	r20, 0x00	; 0
  ec:	e1 f7       	brne	.-8      	; 0xe6 <main+0x66>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <main+0x70>
  f0:	00 00       	nop
  f2:	01 97       	sbiw	r24, 0x01	; 1
	
	DDRD |= (1 << PIND6) | (1 << PIND5) | (1 << PIND4) | (1 << PIND3);
	
    while (1) {

		for(i = 0; i < length; i++) {
  f4:	51 f6       	brne	.-108    	; 0x8a <main+0xa>
			PORTD &= ~(1 << PIND4);
			PORTD |= (1 << PIND3);
			_delay_ms(100);
		}
			
		PORTD &= ~(1 << PIND6);
  f6:	5e 98       	cbi	0x0b, 6	; 11
		PORTD &= ~(1 << PIND5);
  f8:	5d 98       	cbi	0x0b, 5	; 11
		PORTD &= ~(1 << PIND4);
  fa:	5c 98       	cbi	0x0b, 4	; 11
		PORTD &= ~(1 << PIND3);
  fc:	5b 98       	cbi	0x0b, 3	; 11
    }
  fe:	c3 cf       	rjmp	.-122    	; 0x86 <main+0x6>

00000100 <_exit>:
 100:	f8 94       	cli

00000102 <__stop_program>:
 102:	ff cf       	rjmp	.-2      	; 0x102 <__stop_program>

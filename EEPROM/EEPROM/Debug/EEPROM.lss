
EEPROM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000112  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000000be  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000112  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000144  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000184  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000071f  00000000  00000000  000001b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000067f  00000000  00000000  000008d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000250  00000000  00000000  00000f52  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  000011a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000371  00000000  00000000  000011e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000021  00000000  00000000  00001559  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  0000157a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 51 00 	call	0xa2	; 0xa2 <main>
  78:	0c 94 5d 00 	jmp	0xba	; 0xba <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <EEPROM_write>:
	}
}

void EEPROM_write(uint8_t Address, uint8_t Data) {
	
	while(EECR & (1 << EEPE));
  80:	f9 99       	sbic	0x1f, 1	; 31
  82:	fe cf       	rjmp	.-4      	; 0x80 <EEPROM_write>
	
	EEAR = Address;
  84:	90 e0       	ldi	r25, 0x00	; 0
  86:	92 bd       	out	0x22, r25	; 34
  88:	81 bd       	out	0x21, r24	; 33
	EEDR = Data;
  8a:	60 bd       	out	0x20, r22	; 32
	EECR |= (1 << EEMPE);
  8c:	fa 9a       	sbi	0x1f, 2	; 31
	EECR |= (1 << EEPE);
  8e:	f9 9a       	sbi	0x1f, 1	; 31
  90:	08 95       	ret

00000092 <EEPROM_read>:
}

uint8_t EEPROM_read(uint8_t Address) {
	
	while(EECR & (1 << EEPE));
  92:	f9 99       	sbic	0x1f, 1	; 31
  94:	fe cf       	rjmp	.-4      	; 0x92 <EEPROM_read>
	
	EEAR = Address;
  96:	90 e0       	ldi	r25, 0x00	; 0
  98:	92 bd       	out	0x22, r25	; 34
  9a:	81 bd       	out	0x21, r24	; 33
	EECR |= (1 << EERE);
  9c:	f8 9a       	sbi	0x1f, 0	; 31
	return EEDR;
  9e:	80 b5       	in	r24, 0x20	; 32
  a0:	08 95       	ret

000000a2 <main>:

int main(void) {
	
	uint8_t data;
	
	DDRD |= (1 << PIND6);
  a2:	56 9a       	sbi	0x0a, 6	; 10
	
	EEPROM_write(0x00, 0x04);
  a4:	64 e0       	ldi	r22, 0x04	; 4
  a6:	80 e0       	ldi	r24, 0x00	; 0
  a8:	0e 94 40 00 	call	0x80	; 0x80 <EEPROM_write>
	
	data = EEPROM_read(0x00);
  ac:	80 e0       	ldi	r24, 0x00	; 0
  ae:	0e 94 49 00 	call	0x92	; 0x92 <EEPROM_read>
	
	if(data == 3)
  b2:	83 30       	cpi	r24, 0x03	; 3
  b4:	09 f4       	brne	.+2      	; 0xb8 <main+0x16>
		PORTD |= (1 << PIND6);
  b6:	5e 9a       	sbi	0x0b, 6	; 11
  b8:	ff cf       	rjmp	.-2      	; 0xb8 <main+0x16>

000000ba <_exit>:
  ba:	f8 94       	cli

000000bc <__stop_program>:
  bc:	ff cf       	rjmp	.-2      	; 0xbc <__stop_program>
